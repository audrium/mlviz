{"version":3,"sources":["mnist/dataset.png","components/Header.js","gradientDescent/DataChart.js","components/StatusChart.js","gradientDescent/Controls.js","gradientDescent/dataset.js","gradientDescent/gradient.js","gradientDescent/regression.js","gradientDescent/GradientDescent.js","mnist/dataset.js","mnist/model.js","mnist/Controls.js","mnist/Accordion.js","mnist/Mnist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Menu","fixed","inverted","Container","Item","header","react_router_dom","to","HighchartsExporting","Highcharts","DataChart","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPoint","e","point","xAxis","value","yAxis","data","props","concat","updateData","removePoint","series","userOptions","id","length","x","y","filter","isEqual","chart","prevProps","update","regressionData","options","type","zoomType","events","click","credits","enabled","title","text","subtitle","gridLineWidth","minPadding","maxPadding","exporting","plotOptions","name","marker","states","hover","lineWidth","enableMouseTracking","destroy","Segment","Group","epoch","Label","size","style","display","className","k","toFixed","b","lr","padding","React","Component","StatusChart","Math","random","updateStep","_this$props","trainData","valData","_this$props2","yTitle","height","xTitle","legend","Boolean","Controls","Form","inline","Field","Button","as","labelPosition","Dropdown","placeholder","datasets","selection","dataset","onChange","onDatasetChange","content","onClick","loadDataset","disabled","training","icon","stopTraining","startTraining","clearData","twoPoints","iris","i","species","map","sepal_length","sepal_width","petal_length","petal_width","getError","total","forEach","_point","slicedToArray","pow","gradientStep","learningRate","gk","gb","_point2","gradient","stepCoefs","initK","arguments","undefined","initB","epochStart","epochEnd","error","errorData","logs","push","getLinearRegression","x1","reduce","min","getMinX","x2","max","getMaxX","DATASETS","key","LEARNING_RATE","GRADIENT_STEP_TIME","GRADIENT_STEP","GradientDescent","setState","getData","state","interval","setInterval","_this$state","g","clearInterval","_this2","_this$state2","gradientDescent_Controls","_ref","Grid","columns","Row","Column","width","gradientDescent_DataChart","overflowY","log","components_StatusChart","IMAGE_H","IMAGE_W","IMAGE_SIZE","NUM_TRAIN_ELEMENTS","NUM_TEST_ELEMENTS","MnistData","shuffledTrainIndex","shuffledTestIndex","createClass","_load","asyncToGenerator","regenerator_default","mark","_callee","img","canvas","ctx","imgRequest","labelsRequest","_ref2","labelsResponse","wrap","_context","prev","next","Image","document","getContext","Promise","resolve","reject","crossOrigin","onload","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","datasetBytesView","Float32Array","drawImage","imageData","getImageData","j","datasetImages","src","fetch","all","sent","t0","Uint8Array","arrayBuffer","t1","datasetLabels","trainIndices","tf","createShuffledIndices","testIndices","trainImages","slice","testImages","trainLabels","testLabels","stop","apply","xs","labels","numExamples","getModel","model","add","flatten","inputShape","dense","units","activation","optimizer","adam","compile","loss","metrics","datasetLoaded","loading","datasetLoading","train","status","alignSelf","marginBottom","AccordionInfo","activeIndex","onAccordionClick","titleProps","index","paddingBottom","Accordion","fluid","styled","Title","active","Icon","Content","Image_Image","datasetExample","floated","wrapped","href","target","rel","Mnist","load","_callee4","testData","totalBatches","currentBatch","testResult","testAccPercent","_context4","getTrainData","getTestData","ceil","fit","batchSize","validationSplit","epochs","callbacks","onBatchEnd","_onBatchEnd","_callee2","batch","_context2","accData","acc","_x","_x2","onEpochEnd","_onEpochEnd","_callee3","_context3","errorValData","val_loss","accValData","val_acc","_x3","_x4","evaluate","dataSync","trained","contxt","predCanvas","current","clearRect","drawCanvas","drawing","imgData","fromPixels","reshape","div","predict","_callee5","_context5","outputObj","output","Array","from","prediction","indexOf","toConsumableArray","predictionScore","console","clear","createRef","Accordion_AccordionInfo","mnist_Controls","float","verticalAlign","compact","positive","es","ref","canvasDraw","lazyRadius","brushRadius","canvasWidth","canvasHeight","App","react_router","path","exact","component","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6YCIzBC,EAAA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,MAAMC,UAAQ,GACxBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACC,EAAA,EAAKI,KAAN,CAAWC,QAAM,GACfR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAT,UAEFV,EAAAC,EAAAC,cAACC,EAAA,EAAKI,KAAN,KAAWP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,qBAAT,qBACXV,EAAAC,EAAAC,cAACC,EAAA,EAAKI,KAAN,KAAWP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,UAAT,oFCLjBC,IAAoBC,SAkILC,cA9HX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcJI,SAAW,SAAAC,GACP,IAEMC,EAAQ,CAFJD,EAAEE,MAAM,GAAGC,MACXH,EAAEI,MAAM,GAAGD,OAEfE,EAAOb,EAAKc,MAAMD,KAAKE,OAAO,CAACN,IACrCT,EAAKc,MAAME,WAAWH,IApBZb,EAuBdiB,YAAc,SAAAT,GACV,GAAsC,SAAlCA,EAAEC,MAAMS,OAAOC,YAAYC,MAC3BpB,EAAKc,MAAMD,KAAKQ,QAAU,GAA9B,CAEA,IAAMZ,EAAQ,CAACD,EAAEC,MAAMa,EAAGd,EAAEC,MAAMc,GAC5BV,EAAOb,EAAKc,MAAMD,KAAKW,OAAO,SAAAxC,GAAC,OAAKyC,kBAAQzC,EAAGyB,KACrDT,EAAKc,MAAME,WAAWH,KA3BtBb,EAAK0B,MAAQ,KACb1B,EAAKoB,GAAK,mBAHApB,kFAMK2B,GACXA,EAAUd,OAASV,KAAKW,MAAMD,MAC9BV,KAAKuB,MAAMR,OAAO,GAAGU,OAAO,CAAEf,KAAMV,KAAKW,MAAMD,OAE/Cc,EAAUE,iBAAmB1B,KAAKW,MAAMe,gBACxC1B,KAAKuB,MAAMR,OAAO,GAAGU,OAAO,CAAEf,KAAMV,KAAKW,MAAMe,6DAsBnD,IAAMC,EAAU,CACZJ,MAAO,CACHK,KAAM,UACNC,SAAU,KACVC,OAAQ,CACJC,MAAO/B,KAAKI,WAGpB4B,QAAS,CACLC,SAAS,GAEbC,MAAO,CACHC,KAAM,IAEVC,SAAU,CACND,KAAM,mEAEV5B,MAAO,CACH0B,SAAS,EACTC,MAAO,CACHC,KAAM,KAEVE,cAAe,EACfC,WAAY,GACZC,WAAY,IAEhB9B,MAAO,CACHyB,MAAO,CACHC,KAAM,KAEVG,WAAY,GACZC,WAAY,IAEhBC,UAAW,CACPP,SAAS,GAEbQ,YAAa,CACT1B,OAAQ,CACJT,MAAO,CACHwB,OAAQ,CACJC,MAAS/B,KAAKc,gBAK9BC,OAAQ,CACJ,CAAEE,GAAI,OAAQyB,KAAM,OAAQhC,KAAMV,KAAKW,MAAMD,MAC7C,CACIkB,KAAM,OACNX,GAAI,aACJyB,KAAM,kBACNhC,KAAMV,KAAKW,MAAMe,eACjBiB,OAAQ,CACJV,SAAS,GAEbW,OAAQ,CACJC,MAAO,CACHC,UAAW,IAGnBC,qBAAqB,KAIjC/C,KAAKuB,MAAQ,IAAI5B,IAAW4B,MAAMvB,KAAKiB,GAAIU,kDAI3C3B,KAAKuB,MAAMyB,2CAIX,OACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAQC,MAAT,KACInE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACIlE,EAAAC,EAAAC,cAAA,4BACCe,KAAKW,MAAMwC,MAAQ,GAChBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAMF,MAAP,CAAaG,KAAK,SAASC,MAAO,CAAEC,QAAS,WACzCxE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOI,UAAU,eAAjB,UAAuCxD,KAAKW,MAAMwC,OAClDpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOI,UAAU,UAAjB,MAA8BxD,KAAKW,MAAM8C,EAAEC,QAAQ,IACnD3E,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOI,UAAU,UAAjB,MAA8BxD,KAAKW,MAAMgD,EAAED,QAAQ,IACnD3E,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOI,UAAU,UAAjB,kBAA0CxD,KAAKW,MAAMiD,MAIjE7E,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAASK,MAAO,CAAEO,QAAS,IACvB9E,EAAAC,EAAAC,cAAA,OAAKgC,GAAIjB,KAAKiB,cAzHV6C,IAAMC,WCiFfC,cAnFX,SAAAA,EAAYrD,GAAO,IAAAd,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACfnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMW,KACDY,MAAQ,KACb1B,EAAKoB,GAAK,QAAUgD,KAAKC,SACzBrE,EAAKsE,WAAaxD,EAAMwD,YAAc,GAJvBtE,kFAOA2B,GAAW,IAAA4C,EACKpE,KAAKW,MAA5B0D,EADkBD,EAClBC,UAAWC,EADOF,EACPE,QACf9C,EAAU6C,YAAcA,GAAcA,EAAUnD,OAASlB,KAAKmE,aAAe,GAC7EnE,KAAKuB,MAAMR,OAAO,GAAGU,OAAO,CAAEf,KAAM2D,IAGpC7C,EAAU8C,UAAYA,GACtBtE,KAAKuB,MAAMR,OAAO,GAAGU,OAAO,CAAEf,KAAM4D,gDAIxB,IAAAC,EAC+BvE,KAAKW,MAA5C0D,EADQE,EACRF,UAAWC,EADHC,EACGD,QAASE,EADZD,EACYC,OACtB7C,EAAU,CACZJ,MAAO,CACHK,KAAM,OACN6C,OAAQ,KAEZzC,QAAS,CACLC,SAAS,GAEbC,MAAO,CACHC,KAAM,IAEV5B,MAAO,CACH0B,SAAS,EACTC,MAAO,CACHC,KAhBIoC,EACoBG,QAeR,UAGxBjE,MAAO,CACHyB,MAAO,CACHC,KAAMqC,GAEVlC,WAAY,EACZC,WAAY,GAEhBoC,OAAQ,CACJ1C,UAASqC,GAEb9B,UAAW,CACPP,SAAS,GAEbQ,YAAa,CACT1B,OAAQ,CACJ+B,UAAW,EACXH,OAAQ,CACJV,SAAS,KAIrBlB,OAAQ,CACJ,CAAEE,GAAI,QAASyB,KAAM,QAAShC,KAAM2D,KACnCC,GAAU,CAAErD,GAAI,MAAOyB,KAAM,aAAchC,KAAM4D,IACpDjD,OAAOuD,UAEb5E,KAAKuB,MAAQ,IAAI5B,IAAW4B,MAAMvB,KAAKiB,GAAIU,kDAI3C3B,KAAKuB,MAAMyB,2CAIX,OACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAQC,MAAT,KACInE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KAASlE,EAAAC,EAAAC,cAAA,SAAIe,KAAKW,MAAMuB,QACxBnD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAASK,MAAO,CAAEO,QAAS,IACvB9E,EAAAC,EAAAC,cAAA,OAAKgC,GAAIjB,KAAKiB,cA7ER6C,IAAMC,sCC+BjBc,EAhCE,SAAAlE,GAAK,OAClB5B,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACI/F,EAAAC,EAAAC,cAAC6F,EAAA,EAAK5B,MAAN,CAAY6B,QAAM,GACdhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,MAAN,KACIjG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQC,GAAG,MAAMC,cAAc,QAC3BpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACIC,YAAY,UACZ1D,QAAShB,EAAM2E,SACfC,WAAS,EACT/B,UAAU,QACVhD,MAAOG,EAAM6E,QACbC,SAAU9E,EAAM+E,kBAEpB3G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACIU,QAAQ,OACRC,QAASjF,EAAMkF,YACfC,SAAUnF,EAAMoF,aAI3BpF,EAAMoF,SACHhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQU,QAAQ,OAAOK,KAAK,OAAOb,cAAc,QAAQS,QAASjF,EAAMsF,eACxElH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQU,QAAQ,QAAQK,KAAK,OAAOb,cAAc,QAAQS,QAASjF,EAAMuF,iBAE1EvF,EAAMoF,UAAYpF,EAAMwC,MAAQ,GAC/BpE,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQU,QAAQ,QAAQK,KAAK,OAAOb,cAAc,QAAQS,QAASjF,EAAMwF,eC7B1EX,EAAA,SAAAA,GACb,OAAQA,GACN,IAAK,aACH,OAAOY,EACT,QACE,OAAOC,EAAKhF,OAAO,SAAAiF,GAAC,OAAIA,EAAEC,UAAYf,IAASgB,IAAI,SAAAF,GAAC,MAAI,CAACA,EAAEG,aAAcH,EAAEI,iBAI3EN,EAAY,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,KAE5BC,EAAO,CACX,CACEI,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,GACfL,QAAW,UAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,cAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,EAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,EAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,EAChBC,YAAe,IACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,EACfC,aAAgB,IAChBC,YAAe,EACfL,QAAW,aAEb,CACEE,aAAgB,IAChBC,YAAe,IACfC,aAAgB,IAChBC,YAAe,IACfL,QAAW,sBC/gCTM,EAAW,SAACnG,EAAM+C,EAAGE,GACvB,IAAImD,EAAQ,EAKZ,OAJApG,EAAKqG,QAAQ,SAAAzG,GAAS,IAAA0G,EAAAlH,OAAAmH,EAAA,EAAAnH,CACHQ,EADG,GACXa,EADW6F,EAAA,GACR5F,EADQ4F,EAAA,GAElBF,GAAK7C,KAAAiD,IAAK9F,GAAKqC,EAAItC,EAAIwC,GAAO,KAE3BmD,EAAQpG,EAAKQ,QAGlBiG,EAAe,SAACzG,EAAM+C,EAAGE,EAAGyD,GAC9B,IAAIC,EAAK,EACLC,EAAK,EAUT,OARA5G,EAAKqG,QAAQ,SAAAzG,GAAS,IAAAiH,EAAAzH,OAAAmH,EAAA,EAAAnH,CACHQ,EADG,GACXa,EADWoG,EAAA,GACRnG,EADQmG,EAAA,GAElBF,IAAO,EAAIlG,GAAKC,GAAMqC,EAAItC,EAAKwC,IAC/B2D,IAAO,GAAKlG,GAAMqC,EAAItC,EAAKwC,MAG/BF,GAAU,EAAI/C,EAAKQ,OAAUmG,EAAKD,EAClCzD,GAAU,EAAIjD,EAAKQ,OAAUoG,EAAKF,EAC3B,CAAE3D,IAAGE,MAGH6D,EAAW,SAAC9G,GAOrB,IAPwF,IAIpF+G,EAJuBC,EAA6DC,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,GAArD,EAAGE,EAAkDF,UAAAzG,OAAA,QAAA0G,IAAAD,UAAA,GAAAA,UAAA,GAA1C,EAAGG,EAAuCH,UAAAzG,OAAA,EAAAyG,UAAA,QAAAC,EAA3BG,EAA2BJ,UAAAzG,OAAA,EAAAyG,UAAA,QAAAC,EAAjBR,EAAiBO,UAAAzG,OAAA,EAAAyG,UAAA,QAAAC,EACpFI,EAAQ,EACRvE,EAAIiE,EACJ/D,EAAIkE,EAEJI,EAAY,GACZC,EAAO,GACF/E,EAAQ2E,EAAY3E,EAAQ4E,EAAU5E,IAE3CM,GADAgE,EAAYN,EAAazG,EAAM+C,EAAGE,EAAGyD,IACvB3D,EACdE,EAAI8D,EAAU9D,EACdqE,EAAQnB,EAASnG,EAAM+C,EAAGE,GAC1BsE,EAAUE,KAAKH,GACD,IAAV7E,GAAeA,EAAQ,MAAQ,GAC/B+E,EAAKC,KAAL,UAAAvH,OAAoBuC,EAApB,SAAAvC,OAAiC6C,EAAEC,QAAQ,GAA3C,SAAA9C,OAAqD+C,EAAED,QAAQ,GAA/D,aAAA9C,OAA6EoH,EAAMtE,QAAQ,KAGnG,MAAO,CAAED,IAAGE,IAAGsE,YAAWC,SChCjBE,EAAsB,SAAC1H,EAAM+C,EAAGE,GACzC,IAAM0E,EATM,SAAA3H,GACZ,OAAOA,EAAK4H,OAAO,SAACC,EAAK1J,GAAN,OAAYA,EAAE,GAAK0J,EAAM1J,EAAE,GAAK0J,GAAK7H,EAAK,GAAG,IAQrD8H,CAAQ9H,GACb+H,EANM,SAAA/H,GACZ,OAAOA,EAAK4H,OAAO,SAACI,EAAK7J,GAAN,OAAYA,EAAE,GAAK6J,EAAM7J,EAAE,GAAK6J,GAAKhI,EAAK,GAAG,IAKrDiI,CAAQjI,GAGnB,MAAO,CAAC,CAAC2H,EAFE5E,EAAI4E,EAAK1E,GAEF,CAAC8E,EADRhF,EAAIgF,EAAK9E,KCJlBiF,EAAW,CACb,CAAEC,IAAK,SAAUrI,MAAO,SAAU2B,KAAM,uBACxC,CAAE0G,IAAK,aAAcrI,MAAO,aAAc2B,KAAM,2BAChD,CAAE0G,IAAK,YAAarI,MAAO,YAAa2B,KAAM,0BAC9C,CAAE0G,IAAK,QAASrI,MAAO,aAAc2B,KAAM,eAGzC2G,EAAgB,KAChBC,EAAqB,IACrBC,EAAgB,GA+HPC,cA3HX,SAAAA,IAAc,IAAApJ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiJ,IACVpJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmJ,GAAA9I,KAAAH,QAeJ6F,YAAc,kBAAMhG,EAAKqJ,SAAS,CAC9BxI,KAAMyI,EAAQtJ,EAAKuJ,MAAM5D,SACzB9D,eAAgB,GAChBwG,KAAM,GACND,UAAW,GACXxE,EAAG,EACHE,EAAG,EACHR,MAAO,KAvBGtD,EA0BdgB,WAAa,SAAAH,GACLb,EAAKuJ,MAAMrD,UACflG,EAAKqJ,SAAS,CAAExI,KAAMA,KA5BZb,EA+BdsG,UAAY,kBAAMtG,EAAKqJ,SAAS,CAC5BxH,eAAgB,GAChBwG,KAAM,GACND,UAAW,GACXxE,EAAG,EACHE,EAAG,EACHR,MAAO,KArCGtD,EAwCdqG,cAAgB,WACZrG,EAAKqJ,SAAS,CAAEnD,UAAU,IAC1BlG,EAAKwJ,SAAWC,YAAY,WAAM,IAAAC,EACiB1J,EAAKuJ,MAA5C1I,EADsB6I,EACtB7I,KAAM+C,EADgB8F,EAChB9F,EAAGE,EADa4F,EACb5F,EAAGsE,EADUsB,EACVtB,UAAWC,EADDqB,EACCrB,KAAM/E,EADPoG,EACOpG,MAC/B4E,EAAW5E,EAAQ6F,EACnBQ,EAAIhC,EAAS9G,EAAM+C,EAAGE,EAAGR,EAAO4E,EAAUe,GAChDjJ,EAAKqJ,SAAS,CACVxH,eAAgB0G,EAAoB1H,EAAM8I,EAAE/F,EAAG+F,EAAE7F,GACjDuE,KAAMsB,EAAEtB,KAAKhH,OAAS,EAClBgH,EAAKtH,OAAO4I,EAAEtB,MAAQA,EAC1BD,UAAWuB,EAAEvB,UAAU/G,OAAS,EAC5B+G,EAAUrH,OAAO4I,EAAEvB,WAAaA,EACpCxE,EAAG+F,EAAE/F,EACLE,EAAG6F,EAAE7F,EACLR,MAAO4E,KAEZgB,IAxDOlJ,EA2DdoG,aAAe,WACXpG,EAAKqJ,SAAS,CAAEnD,UAAU,IAC1B0D,cAAc5J,EAAKwJ,WA3DnBxJ,EAAK0B,MAAQ,KACb1B,EAAKuJ,MAAQ,CACT1I,KAAMyI,EAAQ,UACd3D,QAAS,SACT9D,eAAgB,GAChBuG,UAAW,GACXC,KAAM,GACNnC,UAAU,EACV5C,MAAO,EACPM,EAAG,EACHE,EAAG,GAZG9D,wEAgEL,IAAA6J,EAAA1J,KAAA2J,EACuD3J,KAAKoJ,MAAzD1I,EADHiJ,EACGjJ,KAAMgB,EADTiI,EACSjI,eAAgBuG,EADzB0B,EACyB1B,UAAWC,EADpCyB,EACoCzB,KAAMnC,EAD1C4D,EAC0C5D,SAC/C,OACIhH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWiE,MAAO,CAAEO,QAAS,YACzB9E,EAAAC,EAAAC,cAAC2K,EAAD,CACItE,SAAUsD,EACVpD,QAASxF,KAAKoJ,MAAM5D,QACpBE,gBAAiB,SAACrF,EAADwJ,GAAA,IAAMrJ,EAANqJ,EAAMrJ,MAAN,OAAkBkJ,EAAKR,SAAS,CAAE1D,QAAShF,KAC5DqF,YAAa7F,KAAK6F,YAClBI,aAAcjG,KAAKiG,aACnBC,cAAelG,KAAKkG,cACpBC,UAAWnG,KAAKmG,UAChBJ,SAAUA,EACV5C,MAAOnD,KAAKoJ,MAAMjG,QAEtBpE,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,QAAS,GACXhL,EAAAC,EAAAC,cAAC6K,EAAA,EAAKE,IAAN,KACIjL,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,CAAaC,MAAO,IAChBnL,EAAAC,EAAAC,cAACkL,EAAD,CACIzJ,KAAMA,EACNG,WAAYb,KAAKa,WACjBa,eAAgBA,EAChByB,MAAOnD,KAAKoJ,MAAMjG,MAClBM,EAAGzD,KAAKoJ,MAAM3F,EACdE,EAAG3D,KAAKoJ,MAAMzF,EACdC,GAAIkF,EACJ/C,SAAUA,MAItBhH,EAAAC,EAAAC,cAAC6K,EAAA,EAAKE,IAAN,KACK9B,EAAKhH,OAAS,GACXnC,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACgE,EAAA,EAAQC,MAAT,KACInE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KAASlE,EAAAC,EAAAC,cAAA,mCACTF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAASK,MAAO,CAAEmB,OAAQ,IAAK2F,UAAW,WACrClC,EAAK1B,IAAI,SAAC6D,EAAK/D,GAAN,OAAYvH,EAAAC,EAAAC,cAAA,OAAK4J,IAAKvC,GAAI+D,QAKnDpC,EAAU/G,OAAS,GAChBnC,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACqL,EAAD,CACIpI,MAAM,QACNmC,UAAW4D,EACXzD,OAAO,QACPE,OAAO,QACPP,WAAY,iBAlHlBL,IAAMC,8DClBvBwG,EAAU,GACVC,EAAU,GACjBC,EAAaF,EAAUC,EAIhBE,EAAqB,KAC5BC,GAHuB,KAGoBD,EAWpCE,GAAb,WAEI,SAAAA,IAAe9K,OAAAC,EAAA,EAAAD,CAAAE,KAAA4K,GACX5K,KAAK6K,mBAAqB,EAC1B7K,KAAK8K,kBAAoB,EAJjC,OAAAhL,OAAAiL,EAAA,EAAAjL,CAAA8K,EAAA,EAAA/B,IAAA,OAAArI,MAAA,eAAAwK,EAAAlL,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5B,EAAA6B,EAAAC,EAAA9L,EAAAG,KAAA,OAAAkL,EAAAlM,EAAA4M,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAScV,EAAM,IAAIW,MACVV,EAASW,SAAShN,cAAc,UAChCsM,EAAMD,EAAOY,WAAW,MACxBV,EAAa,IAAIW,QAAQ,SAACC,EAASC,GACrChB,EAAIiB,YAAc,GAClBjB,EAAIkB,OAAS,WACTlB,EAAInB,MAAQmB,EAAImB,aAChBnB,EAAI5G,OAAS4G,EAAIoB,cAEjB,IAAMC,EACF,IAAIC,YAjCK,KAiC8BlC,EAAa,GAGxDa,EAAOpB,MAAQmB,EAAInB,MACnBoB,EAAO7G,OAFW,IAIlB,IAAK,IAAI6B,EAAI,EAAGA,EAAIsG,GAAkCtG,IAAK,CACvD,IAAMuG,EAAmB,IAAIC,aACzBJ,EAAoBpG,EAAImE,EANd,IAMuC,EANvC,IAOVA,GACJc,EAAIwB,UACA1B,EAAK,EATK,IASF/E,EAAe+E,EAAInB,MATjB,IASmC,EAAG,EAAGmB,EAAInB,MAT7C,KAcd,IAFA,IAAM8C,EAAYzB,EAAI0B,aAAa,EAAG,EAAG3B,EAAOpB,MAAOoB,EAAO7G,QAErDyI,EAAI,EAAGA,EAAIF,EAAUtM,KAAKQ,OAAS,EAAGgM,IAG3CL,EAAiBK,GAAKF,EAAUtM,KAAS,EAAJwM,GAAS,IAGtDrN,EAAKsN,cAAgB,IAAIL,aAAaJ,GAEtCN,KAEJf,EAAI+B,IArDZ,+EAwDU3B,EAAgB4B,MAtD1B,gFAMJxB,EAAAE,KAAA,EAkDkBI,QAAQmB,IAAI,CAAC9B,EAAYC,IAlD3C,cAAA5B,EAAAgC,EAAA0B,KAAA7B,EAAA5L,OAAAmH,EAAA,EAAAnH,CAAA+J,EAAA,GAAA6B,EAAA,GAiD4BC,EAjD5BD,EAAA,GAAAG,EAAA2B,GAoDiCC,WApDjC5B,EAAAE,KAAA,GAoDkDJ,EAAe+B,cApDjE,QAAA7B,EAAA8B,GAAA9B,EAAA0B,KAoDQvN,KAAK4N,cApDb,IAAA/B,EAAA2B,GAAA3B,EAAA8B,IAwDQ3N,KAAK6N,aAAeC,IAAQC,sBAAsBrD,GAClD1K,KAAKgO,YAAcF,IAAQC,sBAAsBpD,IAGjD3K,KAAKiO,YACDjO,KAAKmN,cAAce,MAAM,EAAGzD,EAAaC,GAC7C1K,KAAKmO,WAAanO,KAAKmN,cAAce,MAAMzD,EAAaC,GACxD1K,KAAKoO,YACDpO,KAAK4N,cAAcM,MAAM,EA/EjB,GA+EkCxD,GAC9C1K,KAAKqO,WACDrO,KAAK4N,cAAcM,MAjFX,GAiF+BxD,GAlEnD,yBAAAmB,EAAAyC,SAAAlD,EAAApL,SAAA,yBAAAgL,EAAAuD,MAAAvO,KAAA2H,YAAA,KAAAkB,IAAA,eAAArI,MAAA,WA8EQ,MAAO,CAAEgO,GALEV,IACP9N,KAAKiO,YACL,CAACjO,KAAKiO,YAAY/M,OAASuJ,EAAYF,EAASC,EAAS,IAGhDiE,OAFEX,IACX9N,KAAKoO,YAAa,CAACpO,KAAKoO,YAAYlN,OA5F5B,WAepB,CAAA2H,IAAA,cAAArI,MAAA,SAoFgBkO,GACR,IAAIF,EAAKV,IACL9N,KAAKmO,WACL,CAACnO,KAAKmO,WAAWjN,OAASuJ,EAAYF,EAASC,EAAS,IACxDiE,EAASX,IACT9N,KAAKqO,WAAY,CAACrO,KAAKqO,WAAWnN,OAxG1B,QA8GZ,OAJmB,MAAfwN,IACAF,EAAKA,EAAGN,MAAM,CAAC,EAAG,EAAG,EAAG,GAAI,CAACQ,EAAanE,EAASC,EAAS,IAC5DiE,EAASA,EAAOP,MAAM,CAAC,EAAG,GAAI,CAACQ,EA5GvB,MA8GL,CAAEF,KAAIC,cA/FrB7D,EAAA,GCjBO,SAAS+D,KACZ,IAAMC,EAAQd,MACdc,EAAMC,IAAIf,IAAUgB,QAAQ,CAAEC,WAAY,CAACxE,EAASC,EAAS,MAC7DoE,EAAMC,IAAIf,IAAUkB,MAAM,CAAEC,MAAO,GAAIC,WAAY,UACnDN,EAAMC,IAAIf,IAAUkB,MAAM,CAAEC,MAAO,GAAIC,WAAY,aAEnD,IAAMC,EAAYrB,IAASsB,OAO3B,OANAR,EAAMS,QAAQ,CACVF,YACAG,KAAM,0BACNC,QAAS,CAAC,cAGPX,gBCbLhG,GAAW,CAAC,CAAEC,IAAK,QAASrI,MAAO,QAAS2B,KAAM,UA4CzC0C,GA1CE,SAAAlE,GAAK,OAClB5B,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACI/F,EAAAC,EAAAC,cAAC6F,EAAA,EAAK5B,MAAN,CAAY6B,QAAM,GACdhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,MAAN,KACIjG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQC,GAAG,MAAMC,cAAc,QAC3BpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACIC,YAAY,UACZ1D,QAASiH,GACTrD,WAAS,EACT/B,UAAU,QACVhD,MAAO,QACPiF,SAAU,OAEd1G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACIU,QAAShF,EAAM6O,cAAgB,SAAY,OAC3C5J,QAASjF,EAAMkF,YACf4J,QAAS9O,EAAM+O,eACf5J,SAAUnF,EAAM+O,gBAAkB/O,EAAM6O,kBAKnD7O,EAAM6O,eACHzQ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACIU,QAAQ,QACRK,KAAK,OACLb,cAAc,QACdS,QAASjF,EAAMgP,MACf7J,SAAUnF,EAAMoF,WAIvBpF,EAAMiP,QACH7Q,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,SAASC,MAAO,CAAEuM,UAAW,WAAYC,aAAc,IAC9DnP,EAAMiP,6DCpCNG,8MAEjB3G,MAAQ,CAAE4G,YAAa,KAEvBC,iBAAmB,SAAC5P,EAAG6P,GAAe,IAC1BC,EAAUD,EAAVC,MACAH,EAAgBnQ,EAAKuJ,MAArB4G,YACRnQ,EAAKqJ,SAAS,CAAE8G,YAAaA,IAAgBG,GAAS,EAAIA,6EAGrD,IACGH,EAAgBhQ,KAAKoJ,MAArB4G,YACR,OACIjR,EAAAC,EAAAC,cAAA,OAAKqE,MAAO,CAAE8M,cAAe,KACzBrR,EAAAC,EAAAC,cAACoR,GAAA,EAAD,CAAWC,OAAK,EAACC,QAAM,GACnBxR,EAAAC,EAAAC,cAACoR,GAAA,EAAUG,MAAX,CAAiBC,OAAwB,IAAhBT,EAAmBG,MAAO,EAAGvK,QAAS5F,KAAKiQ,kBAChElR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CAAMhO,KAAK,aADf,QAIA3D,EAAAC,EAAAC,cAACoR,GAAA,EAAUM,QAAX,CAAmBF,OAAwB,IAAhBT,GACvBjR,EAAAC,EAAAC,cAAA,wHAKJF,EAAAC,EAAAC,cAACoR,GAAA,EAAUG,MAAX,CAAiBC,OAAwB,IAAhBT,EAAmBG,MAAO,EAAGvK,QAAS5F,KAAKiQ,kBAChElR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CAAMhO,KAAK,aADf,kBAIA3D,EAAAC,EAAAC,cAACoR,GAAA,EAAUM,QAAX,CAAmBF,OAAwB,IAAhBT,EAAmB1M,MAAO,CAAEmB,OAAQ,MAC3D1F,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CAAOxD,IAAKyD,KAAgBxN,KAAK,OAAOyN,QAAQ,OAAOC,SAAO,IAC9DhS,EAAAC,EAAAC,cAAA,+IACuIF,EAAAC,EAAAC,cAAA,WADvI,uIAEwIF,EAAAC,EAAAC,cAAA,WAFxI,aAGcF,EAAAC,EAAAC,cAAA,KAAG+R,KAAK,oCAAoCC,OAAO,SAASC,IAAI,uBAAhE,QAHd,eA/BmBnN,aCyO5BoN,eAjOX,SAAAA,IAAc,IAAAtR,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmR,IACVtR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqR,GAAAhR,KAAAH,QAiBJ6F,YAlBc/F,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAkBA,SAAAC,IAAA,OAAAF,EAAAlM,EAAA4M,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVlM,EAAKqJ,SAAS,CAAEwG,gBAAgB,IAChC7P,EAAKa,KAAO,IAAIkK,GAFNiB,EAAAE,KAAA,EAGJlM,EAAKa,KAAK0Q,OAHN,OAIVvR,EAAKqJ,SAAS,CAAEsG,eAAe,EAAME,gBAAgB,IAJ3C,wBAAA7D,EAAAyC,SAAAlD,MAlBAvL,EAyBd8P,MAzBc7P,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAyBN,SAAAkG,IAAA,IAAAhN,EAAAiN,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxG,EAAAlM,EAAA4M,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,cACJlM,EAAKqJ,SAAS,CAAEnD,UAAU,EAAM6J,OAAQ,sBACxC/P,EAAK+O,MAAQD,KAEK,IACM,IACJ,EAEdtK,EAAYxE,EAAKa,KAAKkR,eACtBN,EAAWzR,EAAKa,KAAKmR,cAErBN,EALc,EAKCtN,KAAK6N,KAAuB,IAAlBpH,EAPb,KAQd8G,EAAe,EAZfG,EAAA5F,KAAA,GAcElM,EAAK+O,MAAMmD,IAAI1N,EAAUmK,GAAInK,EAAUoK,OAAQ,CACjDuD,UAXc,IAYdC,gBAXoB,IAYpBC,OAXgB,EAYhBC,UAAW,CACPC,WAAU,eAAAC,EAAAvS,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAAE,SAAAmH,EAAOC,EAAOrK,GAAd,OAAAgD,EAAAlM,EAAA4M,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cACRyF,IACA3R,EAAKqJ,SAAS,CACV0G,OAAQ,mBAAAhP,QACA4Q,EAAeD,EAAe,KAAK7N,QAAQ,GAD3C,4DAGRuE,UAAWpI,EAAKuJ,MAAMnB,UAAUrH,OAAOsH,EAAKoH,MAC5CmD,QAAS5S,EAAKuJ,MAAMqJ,QAAQ7R,OAAOsH,EAAKwK,OAPpCF,EAAAzG,KAAA,EASF+B,MATE,wBAAA0E,EAAAlE,SAAAgE,MAAF,gBAAAK,EAAAC,GAAA,OAAAP,EAAA9D,MAAAvO,KAAA2H,YAAA,GAWVkL,WAAU,eAAAC,EAAAhT,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAAE,SAAA4H,EAAO5P,EAAO+E,GAAd,OAAAgD,EAAAlM,EAAA4M,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cACRlM,EAAKqJ,SAAS,CACV+J,aAAcpT,EAAKuJ,MAAM6J,aAAarS,OAAO,CAAC,CAAC4Q,EAActJ,EAAKgL,YAClEC,WAAYtT,EAAKuJ,MAAM+J,WAAWvS,OAAO,CAAC,CAAC4Q,EAActJ,EAAKkL,aAH1DJ,EAAAjH,KAAA,EAKF+B,MALE,wBAAAkF,EAAA1E,SAAAyE,MAAF,gBAAAM,EAAAC,GAAA,OAAAR,EAAAvE,MAAAvO,KAAA2H,YAAA,MA9Bd,QAwCE8J,EAAa5R,EAAK+O,MAAM2E,SAASjC,EAAS9C,GAAI8C,EAAS7C,QACvDiD,EAA+C,IAA9BD,EAAW,GAAG+B,WAAW,GAEhD3T,EAAKqJ,SAAS,CACVuK,SAAS,EACT7D,OAAM,wBAAAhP,OAA0B8Q,EAAehO,QAAQ,GAAjD,OA7CN,yBAAAiO,EAAArD,SAAA+C,MAzBMxR,EA0EdoN,aAAe,WACX,IAAMyG,EAAS7T,EAAK8T,WAAWC,QAAQ1H,WAAW,MAClDwH,EAAOG,UAAU,EAAG,EAAGrJ,EAASD,GAChCmJ,EAAO3G,UAAUlN,EAAKiU,WAAWxI,OAAOyI,QAAS,EAAG,EAAGvJ,EAASD,GAChE,IAAMyJ,EAAUN,EAAOzG,aAAa,EAAG,EAAGzC,EAASD,GAE/Cc,EAAMyC,IAAWmG,WAAWD,EAAS,GAGzC,OAFA3I,EAAMA,EAAI6I,QAAQ,CAAC,EAAG,GAAI,GAAI,KAC9B7I,EAAMyC,IAAQzC,EAAK,YACR8I,IAAIrG,IAAU,OAnFfjO,EAsFduU,QAtFctU,OAAAmL,EAAA,EAAAnL,CAAAoL,EAAAlM,EAAAmM,KAsFJ,SAAAkJ,IAAA,OAAAnJ,EAAAlM,EAAA4M,KAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,cAAAuI,EAAAvI,KAAA,EACA+B,IAAQ,WACV,IAAMkG,EAAUnU,EAAKoN,eACfsH,EAAY1U,EAAK+O,MAAMwF,QAAQJ,GAASR,WACxCgB,EAASC,MAAMC,KAAKH,GAEpBI,EAAaH,EAAOI,QAAQ3Q,KAAKyE,IAAL6F,MAAAtK,KAAInE,OAAA+U,EAAA,EAAA/U,CAAQ0U,KACxCM,EAAuC,IAArBN,EAAOG,GAE/BI,QAAQ1K,IAAImK,GACZO,QAAQ1K,IAAIsK,GACZI,QAAQ1K,IAAIyK,GAEZjV,EAAKqJ,SAAS,CAAEyL,WAAYA,EAAYG,gBAAiBA,EAAgBpR,QAAQ,OAb/E,wBAAA4Q,EAAAhG,SAAA+F,MAtFIxU,EAuGdmV,MAAQ,WACJnV,EAAKiU,WAAWkB,QACDnV,EAAK8T,WAAWC,QAAQ1H,WAAW,MAC3C2H,UAAU,EAAG,EAAGrJ,EAASD,GAChC1K,EAAKqJ,SAAS,CAAEyL,WAAY,KAAMG,gBAAiB,QAzGnDjV,EAAKuJ,MAAQ,CACToG,eAAe,EACfE,gBAAgB,EAChB3J,UAAU,EACV0N,SAAS,EACT7D,OAAQ,KACR3H,UAAW,GACXgL,aAAc,GACdR,QAAS,GACTU,WAAY,GACZwB,WAAY,KACZG,gBAAiB,MAErBjV,EAAK8T,WAAa7P,IAAMmR,YAfdpV,wEA8GL,IAAA6J,EAAA1J,KAAAuJ,EACsCvJ,KAAKoJ,MAAxCnB,EADHsB,EACGtB,UAAWwK,EADdlJ,EACckJ,QAASkC,EADvBpL,EACuBoL,WAC5B,OACI5V,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWiE,MAAO,CAAEO,QAAS,YACzB9E,EAAAC,EAAAC,cAACiW,GAAD,MAEAnW,EAAAC,EAAAC,cAACkW,GAAD,CACI3F,cAAexP,KAAKoJ,MAAMoG,cAC1BE,eAAgB1P,KAAKoJ,MAAMsG,eAC3B7J,YAAa7F,KAAK6F,YAClB8J,MAAO3P,KAAK2P,MACZ5J,SAAU/F,KAAKoJ,MAAMrD,SACrB6J,OAAQ5P,KAAKoJ,MAAMwG,SAGvB7Q,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,QAAS,GACXhL,EAAAC,EAAAC,cAAC6K,EAAA,EAAKE,IAAN,KACK/B,EAAU/G,OAAS,GAChBnC,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACqL,EAAD,CACIpI,MAAM,QACNmC,UAAW4D,EACX3D,QAAStE,KAAKoJ,MAAM6J,aACpBzO,OAAO,WAIlBiO,EAAQvR,OAAS,GACdnC,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACqL,EAAD,CACIpI,MAAM,WACNmC,UAAWoO,EACXnO,QAAStE,KAAKoJ,MAAM+J,WACpB3O,OAAO,eAKtBxE,KAAKoJ,MAAMqK,SACR1U,EAAAC,EAAAC,cAAC6K,EAAA,EAAKE,IAAN,KACIjL,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACgE,EAAA,EAAQC,MAAT,KACInE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACIlE,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,QAAMqE,MAAO,CAAEC,QAAS,SAAU6R,MAAO,QAASC,cAAe,QAC7DtW,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQqQ,SAAO,EACX3P,QAAQ,QACRC,QAAS5F,KAAKgV,MACd3R,KAAK,SAETtE,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQqQ,SAAO,EAACC,UAAQ,EACpB5P,QAAS,UACTC,QAAS5F,KAAKoU,QACd/Q,KAAK,WAIjBtE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAASK,MAAO,CAAEO,QAAS,IACvB9E,EAAAC,EAAAC,cAACuW,GAAA,EAAD,CACIC,IAAK,SAAAC,GAAU,OAAKhM,EAAKoK,WAAa4B,GACtCC,WAAY,EACZC,YAAa,GACbC,YAAa,OACbC,aAAc,SAK9B/W,EAAAC,EAAAC,cAAC6K,EAAA,EAAKG,OAAN,KACIlL,EAAAC,EAAAC,cAACgE,EAAA,EAAQC,MAAT,KACInE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KAASlE,EAAAC,EAAAC,cAAA,wBACTF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAASK,MAAO,CAAEmB,OAAQ,MACtB1F,EAAAC,EAAAC,cAACK,EAAA,EAAK4D,MAAN,KACInE,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKqR,QAAN,CAAc0E,cAAc,OACxBtW,EAAAC,EAAAC,cAACK,EAAA,EAAKR,OAAN,CAAa0E,UAAU,eACJ,OAAfmR,EACM,yCACA,wCAGV5V,EAAAC,EAAAC,cAAA,UAAQwW,IAAKzV,KAAK2T,WAAYzJ,MAAO,GAAIzF,OAAQ,OAGzC,OAAfkQ,GACG5V,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKqR,QAAN,CAAc0E,cAAc,UACxBtW,EAAAC,EAAAC,cAACK,EAAA,EAAKR,OAAN,CAAa0E,UAAU,eAAvB,eACiBmR,KAKb,OAAfA,GACG5V,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKqR,QAAN,CAAc0E,cAAc,UACxBtW,EAAAC,EAAAC,cAACK,EAAA,EAAKR,OAAN,CAAa0E,UAAU,eAAvB,wBAC0BxD,KAAKoJ,MAAM0L,gBADrC,qBAhNpChR,IAAMC,WCaXgS,oLAbX,OADAhB,QAAQ1K,IAAI,MAEVtL,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC+W,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlN,IACjClK,EAAAC,EAAAC,cAAC+W,EAAA,EAAD,CAAOC,KAAK,oBAAoBE,UAAWlN,IAC3ClK,EAAAC,EAAAC,cAAC+W,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWhF,cAVxBpN,aCMEa,QACW,cAA7BwR,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1X,EAAAC,EAAAC,cAACyX,GAAD,MAASzK,SAAS0K,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a36c7125.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dataset.649191b6.png\";","import React from 'react';\nimport { Container, Menu } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <Menu fixed='top' inverted>\n    <Container>\n      <Menu.Item header>\n        <Link to=\"/\">mlviz</Link>\n      </Menu.Item>\n      <Menu.Item><Link to=\"/gradient_descent\">Gradient Descent</Link></Menu.Item>\n      <Menu.Item><Link to=\"/mnist\">MNIST</Link></Menu.Item>\n    </Container>\n  </Menu>\n);","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsExporting from 'highcharts/modules/exporting';\nimport { Segment, Label } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\n\nHighchartsExporting(Highcharts);\n\nclass DataChart extends React.Component {\n\n    constructor() {\n        super();\n        this.chart = null;\n        this.id = 'linearRegression';\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.chart.series[0].update({ data: this.props.data });\n        }\n        if (prevProps.regressionData !== this.props.regressionData) {\n            this.chart.series[1].update({ data: this.props.regressionData });\n        }\n    }\n\n    addPoint = e => {\n        const x = e.xAxis[0].value;\n        const y = e.yAxis[0].value;\n        const point = [x, y];\n        const data = this.props.data.concat([point]);\n        this.props.updateData(data);\n    }\n\n    removePoint = e => {\n        if (e.point.series.userOptions.id !== 'data') return;\n        if (this.props.data.length <= 2) return;\n\n        const point = [e.point.x, e.point.y];\n        const data = this.props.data.filter(p => !isEqual(p, point));\n        this.props.updateData(data);\n    }\n\n    componentDidMount() {\n        const options = {\n            chart: {\n                type: 'scatter',\n                zoomType: 'xy',\n                events: {\n                    click: this.addPoint\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: ''\n            },\n            subtitle: {\n                text: 'Click the plot area to add a point. Click a point to remove it.'\n            },\n            xAxis: {\n                enabled: true,\n                title: {\n                    text: 'x'\n                },\n                gridLineWidth: 1,\n                minPadding: 0.5,\n                maxPadding: 0.5\n            },\n            yAxis: {\n                title: {\n                    text: 'y'\n                },\n                minPadding: 0.5,\n                maxPadding: 0.5\n            },\n            exporting: {\n                enabled: true\n            },\n            plotOptions: {\n                series: {\n                    point: {\n                        events: {\n                            'click': this.removePoint\n                        }\n                    }\n                }\n            },\n            series: [\n                { id: 'data', name: 'Data', data: this.props.data },\n                {\n                    type: 'line',\n                    id: 'regression',\n                    name: 'Regression Line',\n                    data: this.props.regressionData,\n                    marker: {\n                        enabled: false\n                    },\n                    states: {\n                        hover: {\n                            lineWidth: 0\n                        }\n                    },\n                    enableMouseTracking: false\n                }\n            ]\n        };\n        this.chart = new Highcharts.chart(this.id, options);\n    }\n\n    componentWillUnmount() {\n        this.chart.destroy();\n    }\n\n    render() {\n        return (\n            <Segment.Group>\n                <Segment>\n                    <b>Regression data</b>\n                    {this.props.epoch > 0 &&\n                        <Label.Group size='medium' style={{ display: 'inline' }}>\n                            <Label className='first-label'>epoch: {this.props.epoch}</Label>\n                            <Label className='labels'>k: {this.props.k.toFixed(3)}</Label>\n                            <Label className='labels'>b: {this.props.b.toFixed(3)}</Label>\n                            <Label className='labels'>learning rate: {this.props.lr}</Label>\n                        </Label.Group>\n                    }\n                </Segment>\n                <Segment style={{ padding: 0 }}>\n                    <div id={this.id} />\n                </Segment>\n            </Segment.Group>\n        );\n    }\n}\n\nexport default DataChart;\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport { Segment } from 'semantic-ui-react';\n\nclass StatusChart extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.chart = null;\n        this.id = 'chart' + Math.random();\n        this.updateStep = props.updateStep || 10;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { trainData, valData } = this.props;\n        if (prevProps.trainData !== trainData && (trainData.length % this.updateStep === 0)) {\n            this.chart.series[0].update({ data: trainData });\n        }\n\n        if (prevProps.valData !== valData) {\n            this.chart.series[1].update({ data: valData });\n        }\n    }\n\n    componentDidMount() {\n        const { trainData, valData, yTitle, xTitle } = this.props\n        const options = {\n            chart: {\n                type: 'line',\n                height: 250,\n            },\n            credits: {\n                enabled: false\n            },\n            title: {\n                text: ''\n            },\n            xAxis: {\n                enabled: true,\n                title: {\n                    text: xTitle || 'batch'\n                }\n            },\n            yAxis: {\n                title: {\n                    text: yTitle\n                },\n                minPadding: 0,\n                maxPadding: 0\n            },\n            legend: {\n                enabled: valData ? true : false,\n            },\n            exporting: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    lineWidth: 1,\n                    marker: {\n                        enabled: false\n                    }\n                }\n            },\n            series: [\n                { id: 'train', name: 'Train', data: trainData },\n                (valData ? { id: 'val', name: 'Validation', data: valData } : false)\n            ].filter(Boolean)\n        };\n        this.chart = new Highcharts.chart(this.id, options);\n    }\n\n    componentWillUnmount() {\n        this.chart.destroy();\n    }\n\n    render() {\n        return (\n            <Segment.Group>\n                <Segment><b>{this.props.title}</b></Segment>\n                <Segment style={{ padding: 0 }}>\n                    <div id={this.id} />\n                </Segment>\n            </Segment.Group>\n        );\n    }\n\n}\n\nexport default StatusChart;\n","import React from 'react';\nimport { Dropdown, Button, Form } from 'semantic-ui-react';\n\nconst Controls = props => (\n    <Form>\n        <Form.Group inline>\n            <Form.Field>\n                <label>Dataset:</label>\n                <Button as='div' labelPosition='left'>\n                    <Dropdown\n                        placeholder='Dataset'\n                        options={props.datasets}\n                        selection\n                        className='label'\n                        value={props.dataset}\n                        onChange={props.onDatasetChange}\n                    />\n                    <Button\n                        content='Load'\n                        onClick={props.loadDataset}\n                        disabled={props.training}\n                    />\n                </Button>\n            </Form.Field>\n            {props.training ?\n                <Button content='Stop' icon='stop' labelPosition='right' onClick={props.stopTraining} /> :\n                <Button content='Train' icon='play' labelPosition='right' onClick={props.startTraining} />\n            }\n            {(!props.training && props.epoch > 0) &&\n                <Button content='Clear' icon='redo' labelPosition='right' onClick={props.clearData} />\n            }\n        </Form.Group>\n    </Form>\n);\n\nexport default Controls;","export default dataset => {\n  switch (dataset) {\n    case 'two_points':\n      return twoPoints;\n    default:\n      return iris.filter(i => i.species === dataset).map(i => [i.sepal_length, i.sepal_width]);\n  }\n}\n\nconst twoPoints = [[10, 10], [90, 90]];\n\nconst iris = [\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.7,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.6,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.6,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.6,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.4,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.4,\n    \"sepal_width\": 3.7,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.8,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.8,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.3,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.1,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 4,\n    \"petal_length\": 1.2,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 4.4,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.4,\n    \"sepal_width\": 3.9,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 1.7,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.4,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.7,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.7,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.6,\n    \"sepal_width\": 3.6,\n    \"petal_length\": 1,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 1.7,\n    \"petal_width\": 0.5,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.8,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.9,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.2,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.2,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.7,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.8,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.4,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.2,\n    \"sepal_width\": 4.1,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 4.2,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 1.2,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.1,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.4,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.5,\n    \"sepal_width\": 2.3,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.4,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 1.3,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.5,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.6,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 1.9,\n    \"petal_width\": 0.4,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.8,\n    \"sepal_width\": 3,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.3,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 1.6,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 4.6,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5.3,\n    \"sepal_width\": 3.7,\n    \"petal_length\": 1.5,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 1.4,\n    \"petal_width\": 0.2,\n    \"species\": \"setosa\"\n  },\n  {\n    \"sepal_length\": 7,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 4.7,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 4.9,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 2.3,\n    \"petal_length\": 4,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.5,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.6,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 4.7,\n    \"petal_width\": 1.6,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 2.4,\n    \"petal_length\": 3.3,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.6,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 4.6,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.2,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 3.9,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 2,\n    \"petal_length\": 3.5,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.9,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.2,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 2.2,\n    \"petal_length\": 4,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 4.7,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 3.6,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 4.4,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 4.1,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.2,\n    \"sepal_width\": 2.2,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 3.9,\n    \"petal_width\": 1.1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.9,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 4.8,\n    \"petal_width\": 1.8,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 4.9,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.7,\n    \"petal_width\": 1.2,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 4.3,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.6,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.4,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.8,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.8,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3,\n    \"petal_length\": 5,\n    \"petal_width\": 1.7,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 2.6,\n    \"petal_length\": 3.5,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 2.4,\n    \"petal_length\": 3.8,\n    \"petal_width\": 1.1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 2.4,\n    \"petal_length\": 3.7,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 3.9,\n    \"petal_width\": 1.2,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 5.1,\n    \"petal_width\": 1.6,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.4,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.6,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 4.7,\n    \"petal_width\": 1.5,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.3,\n    \"petal_length\": 4.4,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.1,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 4,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.5,\n    \"sepal_width\": 2.6,\n    \"petal_length\": 4.4,\n    \"petal_width\": 1.2,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.6,\n    \"petal_width\": 1.4,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.6,\n    \"petal_length\": 4,\n    \"petal_width\": 1.2,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5,\n    \"sepal_width\": 2.3,\n    \"petal_length\": 3.3,\n    \"petal_width\": 1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 4.2,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.2,\n    \"petal_width\": 1.2,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.2,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 4.3,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.1,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 3,\n    \"petal_width\": 1.1,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.1,\n    \"petal_width\": 1.3,\n    \"species\": \"versicolor\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 6,\n    \"petal_width\": 2.5,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 5.1,\n    \"petal_width\": 1.9,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.1,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.9,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 5.6,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.5,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.8,\n    \"petal_width\": 2.2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.6,\n    \"sepal_width\": 3,\n    \"petal_length\": 6.6,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 4.9,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 4.5,\n    \"petal_width\": 1.7,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.3,\n    \"sepal_width\": 2.9,\n    \"petal_length\": 6.3,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 5.8,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.2,\n    \"sepal_width\": 3.6,\n    \"petal_length\": 6.1,\n    \"petal_width\": 2.5,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.5,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 5.1,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 5.3,\n    \"petal_width\": 1.9,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.8,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.5,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 5.7,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 5,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 5.1,\n    \"petal_width\": 2.4,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 5.3,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.5,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.5,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.7,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 6.7,\n    \"petal_width\": 2.2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.7,\n    \"sepal_width\": 2.6,\n    \"petal_length\": 6.9,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 2.2,\n    \"petal_length\": 5,\n    \"petal_width\": 1.5,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.9,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 5.7,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 5.6,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.9,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.7,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 6.7,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 4.9,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 5.7,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.2,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 6,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.2,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 4.8,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.9,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 5.6,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.2,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.8,\n    \"petal_width\": 1.6,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.4,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 6.1,\n    \"petal_width\": 1.9,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.9,\n    \"sepal_width\": 3.8,\n    \"petal_length\": 6.4,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 5.6,\n    \"petal_width\": 2.2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.8,\n    \"petal_length\": 5.1,\n    \"petal_width\": 1.5,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.1,\n    \"sepal_width\": 2.6,\n    \"petal_length\": 5.6,\n    \"petal_width\": 1.4,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 7.7,\n    \"sepal_width\": 3,\n    \"petal_length\": 6.1,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 5.6,\n    \"petal_width\": 2.4,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.4,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 5.5,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6,\n    \"sepal_width\": 3,\n    \"petal_length\": 4.8,\n    \"petal_width\": 1.8,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 5.4,\n    \"petal_width\": 2.1,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 5.6,\n    \"petal_width\": 2.4,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.9,\n    \"sepal_width\": 3.1,\n    \"petal_length\": 5.1,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 5.8,\n    \"sepal_width\": 2.7,\n    \"petal_length\": 5.1,\n    \"petal_width\": 1.9,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.8,\n    \"sepal_width\": 3.2,\n    \"petal_length\": 5.9,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3.3,\n    \"petal_length\": 5.7,\n    \"petal_width\": 2.5,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.7,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.2,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.3,\n    \"sepal_width\": 2.5,\n    \"petal_length\": 5,\n    \"petal_width\": 1.9,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.5,\n    \"sepal_width\": 3,\n    \"petal_length\": 5.2,\n    \"petal_width\": 2,\n    \"species\": \"virginica\"\n  },\n  {\n    \"sepal_length\": 6.2,\n    \"sepal_width\": 3.4,\n    \"petal_length\": 5.4,\n    \"petal_width\": 2.3,\n    \"species\": \"virginica\"\n  }\n]","const getError = (data, k, b) => {\n    let total = 0;\n    data.forEach(point => {\n        const [x, y] = point;\n        total += (y - (k * x + b)) ** 2;\n    });\n    return total / data.length;\n}\n\nconst gradientStep = (data, k, b, learningRate) => {\n    let gk = 0;\n    let gb = 0;\n\n    data.forEach(point => {\n        const [x, y] = point;\n        gk += -2 * x * (y - ((k * x) + b));\n        gb += -2 * (y - ((k * x) + b));\n    });\n\n    k = k - ((1 / data.length) * gk * learningRate);\n    b = b - ((1 / data.length) * gb * learningRate);\n    return { k, b };\n}\n\nexport const gradient = (data, initK = 0, initB = 0, epochStart, epochEnd, learningRate) => {\n    let error = 0;\n    let k = initK;\n    let b = initB;\n    let stepCoefs;\n    let errorData = [];\n    let logs = [];\n    for (let epoch = epochStart; epoch < epochEnd; epoch++) {\n        stepCoefs = gradientStep(data, k, b, learningRate);\n        k = stepCoefs.k;\n        b = stepCoefs.b;\n        error = getError(data, k, b);\n        errorData.push(error);\n        if (epoch === 0 || epoch % 100 === 0) {\n            logs.push(`Epoch: ${epoch}, k: ${k.toFixed(3)}, b: ${b.toFixed(3)}, error: ${error.toFixed(3)}`);\n        }\n    }\n    return { k, b, errorData, logs };\n}","\nconst getMinX = data => {\n    return data.reduce((min, p) => p[0] < min ? p[0] : min, data[0][0]);\n}\n\nconst getMaxX = data => {\n    return data.reduce((max, p) => p[0] > max ? p[0] : max, data[0][0]);\n}\n\nexport const getLinearRegression = (data, k, b) => {\n    const x1 = getMinX(data);\n    const x2 = getMaxX(data);\n    const y1 = k * x1 + b;\n    const y2 = k * x2 + b;\n    return [[x1, y1], [x2, y2]];\n}","import React from 'react';\nimport { Container, Grid, Segment } from 'semantic-ui-react';\nimport DataChart from './DataChart';\nimport StatusChart from '../components/StatusChart';\nimport Controls from './Controls';\nimport getData from './dataset';\nimport { gradient } from './gradient';\nimport { getLinearRegression } from './regression';\n\nconst DATASETS = [\n    { key: 'setosa', value: 'setosa', text: 'Iris: Setosa sepals' },\n    { key: 'versicolor', value: 'versicolor', text: 'Iris: Versicolor sepals' },\n    { key: 'virginica', value: 'virginica', text: 'Iris: Virginica sepals' },\n    { key: 'empty', value: 'two_points', text: 'Two points' }\n];\n\nconst LEARNING_RATE = 0.0001;\nconst GRADIENT_STEP_TIME = 100;\nconst GRADIENT_STEP = 10;\n\nclass GradientDescent extends React.Component {\n\n    constructor() {\n        super();\n        this.chart = null;\n        this.state = {\n            data: getData('setosa'),\n            dataset: 'setosa',\n            regressionData: [],\n            errorData: [],\n            logs: [],\n            training: false,\n            epoch: 0,\n            k: 0,\n            b: 0\n        }\n    }\n\n    loadDataset = () => this.setState({\n        data: getData(this.state.dataset),\n        regressionData: [],\n        logs: [],\n        errorData: [],\n        k: 0,\n        b: 0,\n        epoch: 0\n    });\n\n    updateData = data => {\n        if (this.state.training) return;\n        this.setState({ data: data });\n    }\n\n    clearData = () => this.setState({\n        regressionData: [],\n        logs: [],\n        errorData: [],\n        k: 0,\n        b: 0,\n        epoch: 0\n    });\n\n    startTraining = () => {\n        this.setState({ training: true });\n        this.interval = setInterval(() => {\n            const { data, k, b, errorData, logs, epoch } = this.state;\n            const epochEnd = epoch + GRADIENT_STEP;\n            const g = gradient(data, k, b, epoch, epochEnd, LEARNING_RATE);\n            this.setState({\n                regressionData: getLinearRegression(data, g.k, g.b),\n                logs: g.logs.length > 0 ?\n                    logs.concat(g.logs) : logs,\n                errorData: g.errorData.length > 0 ?\n                    errorData.concat(g.errorData) : errorData,\n                k: g.k,\n                b: g.b,\n                epoch: epochEnd\n            });\n        }, GRADIENT_STEP_TIME);\n    }\n\n    stopTraining = () => {\n        this.setState({ training: false });\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { data, regressionData, errorData, logs, training } = this.state;\n        return (\n            <Container style={{ padding: '5em 0em' }}>\n                <Controls\n                    datasets={DATASETS}\n                    dataset={this.state.dataset}\n                    onDatasetChange={(e, { value }) => this.setState({ dataset: value })}\n                    loadDataset={this.loadDataset}\n                    stopTraining={this.stopTraining}\n                    startTraining={this.startTraining}\n                    clearData={this.clearData}\n                    training={training}\n                    epoch={this.state.epoch}\n                />\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <Grid.Column width={16}>\n                            <DataChart\n                                data={data}\n                                updateData={this.updateData}\n                                regressionData={regressionData}\n                                epoch={this.state.epoch}\n                                k={this.state.k}\n                                b={this.state.b}\n                                lr={LEARNING_RATE}\n                                training={training}\n                            />\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        {logs.length > 0 &&\n                            <Grid.Column>\n                                <Segment.Group>\n                                    <Segment><b>Gradient descent logs</b></Segment>\n                                    <Segment style={{ height: 250, overflowY: 'scroll' }}>\n                                        {logs.map((log, i) => <div key={i}>{log}</div>)}\n                                    </Segment>\n                                </Segment.Group>\n                            </Grid.Column>\n                        }\n                        {errorData.length > 0 &&\n                            <Grid.Column>\n                                <StatusChart\n                                    title=\"Error\"\n                                    trainData={errorData}\n                                    yTitle=\"error\"\n                                    xTitle=\"epoch\"\n                                    updateStep={100}\n                                />\n                            </Grid.Column>\n                        }\n                    </Grid.Row>\n                </Grid>\n            </Container >\n        );\n    }\n}\n\nexport default GradientDescent;\n","import * as tf from '@tensorflow/tfjs';\n\nexport const IMAGE_H = 28;\nexport const IMAGE_W = 28;\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nexport const NUM_TRAIN_ELEMENTS = 55000;\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\n\nconst MNIST_IMAGES_SPRITE_PATH =\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\nconst MNIST_LABELS_PATH =\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and returns shuffled batches.\n */\n\nexport class MnistData {\n\n    constructor() {\n        this.shuffledTrainIndex = 0;\n        this.shuffledTestIndex = 0;\n    }\n\n    async load() {\n        // Make a request for the MNIST sprited image.\n        const img = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const imgRequest = new Promise((resolve, reject) => {\n            img.crossOrigin = '';\n            img.onload = () => {\n                img.width = img.naturalWidth;\n                img.height = img.naturalHeight;\n\n                const datasetBytesBuffer =\n                    new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\n\n                const chunkSize = 5000;\n                canvas.width = img.width;\n                canvas.height = chunkSize;\n\n                for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n                    const datasetBytesView = new Float32Array(\n                        datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\n                        IMAGE_SIZE * chunkSize);\n                    ctx.drawImage(\n                        img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\n                        chunkSize);\n\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                    for (let j = 0; j < imageData.data.length / 4; j++) {\n                        // All channels hold an equal value since the image is grayscale, so\n                        // just read the red channel.\n                        datasetBytesView[j] = imageData.data[j * 4] / 255;\n                    }\n                }\n                this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n                resolve();\n            };\n            img.src = MNIST_IMAGES_SPRITE_PATH;\n        });\n\n        const labelsRequest = fetch(MNIST_LABELS_PATH);\n        const [imgResponse, labelsResponse] =\n            await Promise.all([imgRequest, labelsRequest]);\n\n        this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n\n        // Create shuffled indices into the train/test set for when we select a\n        // random dataset element for training / validation.\n        this.trainIndices = tf.util.createShuffledIndices(NUM_TRAIN_ELEMENTS);\n        this.testIndices = tf.util.createShuffledIndices(NUM_TEST_ELEMENTS);\n\n        // Slice the the images and labels into train and test sets.\n        this.trainImages =\n            this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n        this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n        this.trainLabels =\n            this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n        this.testLabels =\n            this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n    }\n\n    /**\n       * Get all training data as a data tensor and a labels tensor.\n       */\n    getTrainData() {\n        const xs = tf.tensor4d(\n            this.trainImages,\n            [this.trainImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\n        const labels = tf.tensor2d(\n            this.trainLabels, [this.trainLabels.length / NUM_CLASSES, NUM_CLASSES]);\n        return { xs, labels };\n    }\n\n    /**\n     * Get all test data as a data tensor a a labels tensor.\n     */\n    getTestData(numExamples) {\n        let xs = tf.tensor4d(\n            this.testImages,\n            [this.testImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\n        let labels = tf.tensor2d(\n            this.testLabels, [this.testLabels.length / NUM_CLASSES, NUM_CLASSES]);\n\n        if (numExamples != null) {\n            xs = xs.slice([0, 0, 0, 0], [numExamples, IMAGE_H, IMAGE_W, 1]);\n            labels = labels.slice([0, 0], [numExamples, NUM_CLASSES]);\n        }\n        return { xs, labels };\n    }\n}","import * as tf from '@tensorflow/tfjs';\nimport { IMAGE_H, IMAGE_W } from './dataset';\n\nexport function getModel() {\n    const model = tf.sequential();\n    model.add(tf.layers.flatten({ inputShape: [IMAGE_H, IMAGE_W, 1] }));\n    model.add(tf.layers.dense({ units: 42, activation: 'relu' }));\n    model.add(tf.layers.dense({ units: 10, activation: 'softmax' }));\n\n    const optimizer = tf.train.adam();\n    model.compile({\n        optimizer,\n        loss: 'categoricalCrossentropy',\n        metrics: ['accuracy'],\n    });\n\n    return model;\n}\n\nexport function getConvModel() {\n    const model = tf.sequential();\n    model.add(tf.layers.conv2d({\n        inputShape: [IMAGE_H, IMAGE_W, 1],\n        kernelSize: 5,\n        filters: 8,\n        strides: 1,\n        activation: 'relu',\n        kernelInitializer: 'varianceScaling'\n    }));\n    model.add(tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }));\n    model.add(tf.layers.conv2d({\n        kernelSize: 5,\n        filters: 16,\n        strides: 1,\n        activation: 'relu',\n        kernelInitializer: 'varianceScaling'\n    }));\n    model.add(tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }));\n    model.add(tf.layers.flatten());\n    const NUM_OUTPUT_CLASSES = 10;\n    model.add(tf.layers.dense({\n        units: NUM_OUTPUT_CLASSES,\n        kernelInitializer: 'varianceScaling',\n        activation: 'softmax'\n    }));\n\n    const optimizer = tf.train.adam();\n    model.compile({\n        optimizer: optimizer,\n        loss: 'categoricalCrossentropy',\n        metrics: ['accuracy'],\n    });\n\n    return model;\n}","import React from 'react';\nimport { Dropdown, Button, Form, Label } from 'semantic-ui-react';\n\nconst DATASETS = [{ key: 'mnist', value: 'mnist', text: 'MNIST' }];\n\nconst Controls = props => (\n    <Form>\n        <Form.Group inline>\n            <Form.Field>\n                <label>Dataset:</label>\n                <Button as='div' labelPosition='left'>\n                    <Dropdown\n                        placeholder='Dataset'\n                        options={DATASETS}\n                        selection\n                        className='label'\n                        value={'mnist'}\n                        onChange={null}\n                    />\n                    <Button\n                        content={props.datasetLoaded ? 'Loaded' :  'Load'}\n                        onClick={props.loadDataset}\n                        loading={props.datasetLoading}\n                        disabled={props.datasetLoading || props.datasetLoaded}\n                    />\n                </Button>\n            </Form.Field>\n\n            {props.datasetLoaded &&\n                <Button\n                    content='Train'\n                    icon='play'\n                    labelPosition='right'\n                    onClick={props.train}\n                    disabled={props.training}\n                />\n            }\n\n            {props.status &&\n                <Label size='medium' style={{ alignSelf: 'flex-end', marginBottom: 2 }}>\n                    {props.status}\n                </Label>\n            }\n        </Form.Group>\n    </Form >\n);\n\nexport default Controls;","import React, { Component } from 'react';\nimport { Accordion, Icon, Image } from 'semantic-ui-react';\nimport datasetExample from './dataset.png';\n\nexport default class AccordionInfo extends Component {\n\n    state = { activeIndex: 0 }\n\n    onAccordionClick = (e, titleProps) => {\n        const { index } = titleProps;\n        const { activeIndex } = this.state;\n        this.setState({ activeIndex: activeIndex === index ? -1 : index })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <div style={{ paddingBottom: 20 }}>\n                <Accordion fluid styled>\n                    <Accordion.Title active={activeIndex === 0} index={0} onClick={this.onAccordionClick}>\n                        <Icon name='dropdown' />\n                        Info\n                </Accordion.Title>\n                    <Accordion.Content active={activeIndex === 0}>\n                        <p>\n                            In this page we will train a simple neural network to recognize handwritten digits from the MNIST dataset.\n                        </p>\n                    </Accordion.Content>\n\n                    <Accordion.Title active={activeIndex === 1} index={1} onClick={this.onAccordionClick}>\n                        <Icon name='dropdown' />\n                        What is MNIST?\n                </Accordion.Title>\n                    <Accordion.Content active={activeIndex === 1} style={{ height: 100 }}>\n                        <Image src={datasetExample} size='tiny' floated='left' wrapped />\n                        <p>\n                            MNIST is dataset for handwritten digits. It contains 70,000 28x28 black and white images representing the digits zero through nine.<br />\n                            The data is split into two subsets, with 60,000 images belonging to the training set and 10,000 images belonging to the testing set.<br />\n                            More info <a href='http://yann.lecun.com/exdb/mnist/' target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n                        </p>\n                    </Accordion.Content>\n                </Accordion>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Container, Grid, Button, Item, Segment } from 'semantic-ui-react';\nimport { IMAGE_H, IMAGE_W, NUM_TRAIN_ELEMENTS, MnistData } from './dataset';\nimport { getModel } from './model';\nimport CanvasDraw from \"react-canvas-draw\";\nimport StatusChart from '../components/StatusChart';\nimport Controls from './Controls';\nimport Accordion from './Accordion';\nimport * as tf from '@tensorflow/tfjs';\n\nclass Mnist extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            datasetLoaded: false,\n            datasetLoading: false,\n            training: false,\n            trained: false,\n            status: null,\n            errorData: [],\n            errorValData: [],\n            accData: [],\n            accValData: [],\n            prediction: null,\n            predictionScore: null\n        }\n        this.predCanvas = React.createRef();\n    }\n\n    loadDataset = async () => {\n        this.setState({ datasetLoading: true });\n        this.data = new MnistData();\n        await this.data.load();\n        this.setState({ datasetLoaded: true, datasetLoading: false });\n    }\n\n    train = async () => {\n        this.setState({ training: true, status: 'Training model...' });\n        this.model = getModel();\n\n        const batchSize = 550;\n        const validationSplit = 0.15;\n        const trainEpochs = 3;\n\n        const trainData = this.data.getTrainData();\n        const testData = this.data.getTestData();\n\n        const totalBatches = Math.ceil(NUM_TRAIN_ELEMENTS * (1 - validationSplit) / batchSize) * trainEpochs;\n        let currentBatch = 0;\n\n        await this.model.fit(trainData.xs, trainData.labels, {\n            batchSize,\n            validationSplit,\n            epochs: trainEpochs,\n            callbacks: {\n                onBatchEnd: async (batch, logs) => {\n                    currentBatch++;\n                    this.setState({\n                        status: `Training... (` +\n                            `${(currentBatch / totalBatches * 100).toFixed(1)}%` +\n                            ` complete). To stop training, refresh or close page.`,\n                        errorData: this.state.errorData.concat(logs.loss),\n                        accData: this.state.accData.concat(logs.acc)\n                    });\n                    await tf.nextFrame();\n                },\n                onEpochEnd: async (epoch, logs) => {\n                    this.setState({\n                        errorValData: this.state.errorValData.concat([[currentBatch, logs.val_loss]]),\n                        accValData: this.state.accValData.concat([[currentBatch, logs.val_acc]])\n                    });\n                    await tf.nextFrame();\n                }\n            }\n        });\n\n        const testResult = this.model.evaluate(testData.xs, testData.labels);\n        const testAccPercent = testResult[1].dataSync()[0] * 100;\n\n        this.setState({\n            trained: true,\n            status: `Final test accuracy: ${testAccPercent.toFixed(1)}%`\n        });\n    }\n\n    getImageData = () => {\n        const contxt = this.predCanvas.current.getContext('2d');\n        contxt.clearRect(0, 0, IMAGE_W, IMAGE_H);\n        contxt.drawImage(this.drawCanvas.canvas.drawing, 0, 0, IMAGE_W, IMAGE_H);\n        const imgData = contxt.getImageData(0, 0, IMAGE_W, IMAGE_H);\n\n        let img = tf.browser.fromPixels(imgData, 1)\n        img = img.reshape([1, 28, 28, 1]);\n        img = tf.cast(img, 'float32');\n        return img.div(tf.scalar(255));\n    }\n\n    predict = async () => {\n        await tf.tidy(() => {\n            const imgData = this.getImageData()\n            const outputObj = this.model.predict(imgData).dataSync();\n            const output = Array.from(outputObj);\n\n            const prediction = output.indexOf(Math.max(...output));\n            const predictionScore = output[prediction] * 100;\n\n            console.log(output);\n            console.log(prediction);\n            console.log(predictionScore);\n\n            this.setState({ prediction: prediction, predictionScore: predictionScore.toFixed(1) });\n        });\n    }\n\n    clear = () => {\n        this.drawCanvas.clear();\n        const contxt = this.predCanvas.current.getContext('2d');\n        contxt.clearRect(0, 0, IMAGE_W, IMAGE_H);\n        this.setState({ prediction: null, predictionScore: null });\n    }\n\n    render() {\n        const { errorData, accData, prediction } = this.state;\n        return (\n            <Container style={{ padding: '5em 0em' }}>\n                <Accordion />\n\n                <Controls\n                    datasetLoaded={this.state.datasetLoaded}\n                    datasetLoading={this.state.datasetLoading}\n                    loadDataset={this.loadDataset}\n                    train={this.train}\n                    training={this.state.training}\n                    status={this.state.status}\n                />\n\n                <Grid columns={2}>\n                    <Grid.Row>\n                        {errorData.length > 0 &&\n                            <Grid.Column>\n                                <StatusChart\n                                    title=\"Error\"\n                                    trainData={errorData}\n                                    valData={this.state.errorValData}\n                                    yTitle=\"error\"\n                                />\n                            </Grid.Column>\n                        }\n                        {accData.length > 0 &&\n                            <Grid.Column>\n                                <StatusChart\n                                    title=\"Accuracy\"\n                                    trainData={accData}\n                                    valData={this.state.accValData}\n                                    yTitle=\"accuracy\"\n                                />\n                            </Grid.Column>\n                        }\n                    </Grid.Row>\n                    {this.state.trained &&\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Segment.Group>\n                                    <Segment>\n                                        <b>Draw</b>\n                                        <span style={{ display: 'inline', float: 'right', verticalAlign: 'top' }}>\n                                            <Button compact\n                                                content='Clear'\n                                                onClick={this.clear}\n                                                size='mini'\n                                            />\n                                            <Button compact positive\n                                                content={'Predict'}\n                                                onClick={this.predict}\n                                                size='mini'\n                                            />\n                                        </span>\n                                    </Segment>\n                                    <Segment style={{ padding: 0 }}>\n                                        <CanvasDraw\n                                            ref={canvasDraw => (this.drawCanvas = canvasDraw)}\n                                            lazyRadius={0}\n                                            brushRadius={40}\n                                            canvasWidth={\"100%\"}\n                                            canvasHeight={540}\n                                        />\n                                    </Segment>\n                                </Segment.Group>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Segment.Group>\n                                    <Segment><b>Prediction</b></Segment>\n                                    <Segment style={{ height: 540 }}>\n                                        <Item.Group>\n                                            <Item>\n                                                <Item.Content verticalAlign='top'>\n                                                    <Item.Header className='item-header'>{\n                                                        prediction !== null\n                                                            ? \"Neural network input (28 x 28 pixels):\"\n                                                            : \"Draw any number and press 'Predict'.\"\n                                                    }\n                                                    </Item.Header>\n                                                    <canvas ref={this.predCanvas} width={28} height={28} />\n                                                </Item.Content>\n                                            </Item>\n                                            {prediction !== null &&\n                                                <Item>\n                                                    <Item.Content verticalAlign='middle'>\n                                                        <Item.Header className='item-header'>\n                                                            Prediction: {prediction}\n                                                        </Item.Header>\n                                                    </Item.Content>\n                                                </Item>\n                                            }\n                                            {prediction !== null &&\n                                                <Item>\n                                                    <Item.Content verticalAlign='middle'>\n                                                        <Item.Header className='item-header'>\n                                                            Prediction accuracy: {this.state.predictionScore}%\n                                                        </Item.Header>\n                                                    </Item.Content>\n                                                </Item>\n                                            }\n                                        </Item.Group>\n                                    </Segment>\n                                </Segment.Group>\n                            </Grid.Column>\n                        </Grid.Row>\n                    }\n                </Grid>\n\n            </Container>\n        );\n    }\n}\n\nexport default Mnist;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport GradientDescent from './gradientDescent/GradientDescent';\nimport Mnist from './mnist/Mnist';\n\nclass App extends Component {\n\n  render() {\n    console.log('ll')\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={GradientDescent} />\n          <Route path=\"/gradient_descent\" component={GradientDescent} />\n          <Route path=\"/mnist\" component={Mnist} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}